getwd()
getwd()
setwd('D:/learn_data_analysis/R basic/lesson3')
knitr::opts_chunk$set(echo = TRUE)
install.packages("tidyr")
install.packages("tidyr")
library(tidyr)
df <- read.csv('indicator age of marriage.csv', header = T, row.names = 1, check.names = F)
df <- gather(df)
View(df)
?gather
df <- read.csv('indicator age of marriage.csv', header = T, row.names = 1, check.names = F)
names(df)
str(df)
df.head()
df <- read.csv('indicator age of marriage.csv')
View(iris)
data(cases)
install.packages("devtools")
library(EDAWR)
?cases
devtools::install_github("rstudio/EDAWR")
?cases
setwd('D:/learn_data_analysis/R basic/lesson4')
library(ggplot2)
pf <- read.csv('pseudo_facebook.tsv', sep = '\t')
ggplot(aes(x = age, y = friendships_initiated), data = pf) +
geom_jitter(alpha = 1/20) +
xlim(13, 90) +
coord_trans(y = 'log10')
?ggplot
ggplot(aes(x = age, y = friendships_initiated), data = pf) +
geom_point(alpha = 1/20, position = position_jitter(h = 0)) +
xlim(13, 90) +
coord_trans(y = 'log10')
ggplot(aes(x = age, y = friendships_initiated), data = pf) +
geom_point(alpha = 1/20, position = position_jitter(h = 0)) +
xlim(13, 90)
ggplot(aes(x = age, y = friendships_initiated), data = pf) +
geom_point(alpha = 1/20, position = position_jitter(h = 0)) +
xlim(13, 90) +
coord_trans(y = 'sqrt')
ggplot(aes(x = age, y = friendships_initiated), data = pf) +
geom_point(alpha = 1/20, position = position_jitter(h = 1)) +
xlim(13, 90) +
coord_trans(y = 'sqrt')
ggplot(aes(x = age, y = friendships_initiated), data = pf) +
geom_point(alpha = 1/20, position = position_jitter(h = 0.5)) +
xlim(13, 90) +
coord_trans(y = 'sqrt')
ggplot(aes(x = age, y = friendships_initiated), data = pf) +
geom_point(alpha = 1/20, position = position_jitter(h = 0)) +
xlim(13, 90) +
coord_trans(y = 'sqrt')
ggplot(aes(x = age, y = friendships_initiated), data = pf) +
geom_point(alpha = 1/10, position = position_jitter(h = 0)) +
xlim(13, 90) +
coord_trans(y = 'sqrt')
ggplot(aes(x = age, y = friendships_initiated), data = pf) +
geom_point(alpha = 1/50, position = position_jitter(h = 0)) +
xlim(13, 90) +
coord_trans(y = 'sqrt')
ggplot(aes(x = age, y = friendships_initiated), data = pf) +
geom_point(alpha = 1/20, position = position_jitter(h = 0)) +
xlim(13, 90) +
coord_trans(y = 'sqrt')
ggplot(aes(x = age, y = friendships_initiated), data = pf) +
geom_point(alpha = 1/20, position = position_jitter(h = 0.2)) +
xlim(13, 90)
ggplot(aes(x = age, y = friendships_initiated), data = pf) +
geom_point(alpha = 1/20, position = position_jitter(h = 0.8)) +
xlim(13, 90)
ggplot(aes(x = age, y = friendships_initiated), data = pf) +
geom_point(alpha = 1/20, position = position_jitter(h = 0)) +
xlim(13, 90)
ggplot(aes(x = age, y = friendships_initiated), data = pf) +
geom_point(alpha = 1/20, position = position_jitter(h = 0)) +
xlim(13, 90) +
coord_trans(y = 'sqrt')
ggplot(aes(x = age, y = friendships_initiated), data = pf) +
geom_point(alpha = 1/20, position = position_jitter(h = 0)) +
xlim(13, 90) +
coord_trans(y = 'log10')
ggplot(aes(x = age, y = friendships_initiated), data = pf) +
geom_point(alpha = 1/20, position = position_jitter(h = 0)) +
xlim(13, 90) +
coord_trans(y = 'sqrt')
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
plot(pressure)
plot(cars)
df_near_city <- read.csv('/data/2018-04-15to2018-07-01_61694036420907.csv')
df_near_city <- read.csv('data/2018-04-15to2018-07-01_61694036420907.csv')
df_far_city  <- read.csv('data/2018-04-15to2018-07-01_63586031976115.csv')
qplot(x = PM2p5, data = df_near_city)
library(ggplot2)
qplot(x = PM2p5, data = df_near_city)
qplot(x = PM2p5, data = df_near_city, binwidth = 10)
qplot(x = PM2p5, data = df_near_city, binwidth = 5) +
scale_x_continuous(breaks = )
qplot(x = PM2p5, data = df_near_city, binwidth = 5) +
scale_x_continuous(breaks = c(0, 200, 50))
qplot(x = PM2p5, data = df_near_city, binwidth = 5) +
scale_x_continuous(breaks = c(0, 200))
qplot(x = PM2p5, data = df_near_city, binwidth = 5) +
scale_x_continuous(breaks = 0:200)
qplot(x = PM2p5, data = df_near_city, binwidth = 1      ) +
scale_x_continuous(breaks = 0:200)
qplot(x = PM2p5, data = df_near_city, binwidth = 1) +
scale_x_continuous(breaks = seq(0,200,25))
qplot(x = PM2p5, data = df_near_city, binwidth = 5) +
scale_x_continuous(breaks = seq(0,200,25))
qplot(x = PM2p5, data = df_near_city, binwidth = 1) +
scale_x_continuous(breaks = seq(0,200,25))
qplot(x = PM2p5, data = df_far_city, binwidth = 1) +
scale_x_continuous(breaks = seq(0,200,25))
qplot(x = PM2p5, data = df_near_city, binwidth = 5) +
scale_x_continuous(breaks = seq(0,200,25))
qplot(x = PM2p5, data = df_far_city, binwidth = 5) +
scale_x_continuous(breaks = seq(0,200,25))
#由于是幂律分布，考虑用log处理
qplot(x = PM2p5, data = df_near_city, binwidth = 5) +
scale_x_log10()
#由于是幂律分布，考虑用log处理
qplot(x = PM2p5, data = df_near_city, binwidth = 5) +
scale_x_log10() +
scale_y_log10()
?scale_x_log10
ggplot(aes(x = PM2p5, y = ..count../sum(..count..)), data = df_near_city, binwidth = 5) +
geom_freqpoly()
ggplot(aes(x = PM2p5, y = ..count../sum(..count..)), data = df_near_city) +
geom_freqpoly(binwidth = 5)
# 转换为频数多边形来显示
ggplot(aes(x = PM2p5, y = ..count../sum(..count..)), data = df_near_city) +
geom_freqpoly(binwidth = 5) +
scale_x_continuous(breaks = seq(0,200,25)) +
xlab('PM2.5') +
ylab('Percentage of that count')
# 转换为频数多边形来显示
ggplot(aes(x = PM2p5, y = ..count../sum(..count..)), data = df_near_city) +
geom_freqpoly(binwidth = 5) +
scale_x_continuous(breaks = seq(0,200,25)) +
xlab('PM2.5') +
ylab('Percentage of that count') +
title('PM2.5 distribution from monitor near city')
?title
title('PM2.5 distribution from monitor near city')
# 转换为频数多边形来显示
ggplot(aes(x = PM2p5, y = ..count../sum(..count..)), data = df_near_city) +
geom_freqpoly(binwidth = 5) +
scale_x_continuous(breaks = seq(0,200,25)) +
xlab('PM2.5') +
ylab('Percentage of that count')
title('PM2.5 distribution from monitor near city')
# 转换为频数多边形来显示
ggplot(aes(x = PM2p5, y = ..count../sum(..count..)), data = df_near_city) +
geom_freqpoly(binwidth = 5) +
scale_x_continuous(breaks = seq(0,200,25)) +
xlab('PM2.5') +
ylab('Percentage of that count')
#由于是幂律分布，考虑用log处理
ggplot(aes(x = PM2p5, y = ..count../sum(..count..)), data = df_near_city) +
geom_freqpoly(binwidth = 5) +
scale_x_log10(breaks = seq(0,200,25)) +
xlab('PM2.5') +
ylab('Percentage of that count')
#由于是幂律分布，考虑用log处理
ggplot(aes(x = PM2p5, y = ..count../sum(..count..)), data = df_near_city) +
geom_freqpoly(binwidth = 5) +
scale_x_log10(limits = c(5, 300), breaks = seq(0,200,25)) +
xlab('PM2.5') +
ylab('Percentage of that count')
#由于是幂律分布，考虑用log处理
ggplot(aes(x = PM2p5, y = ..count../sum(..count..)), data = df_near_city) +
geom_freqpoly(binwidth = 5) +
scale_x_continuous(limits = c(5, 300), breaks = seq(0,200,25)) +
xlab('PM2.5') +
ylab('Percentage of that count')
#由于是幂律分布，考虑用log处理
ggplot(aes(x = PM2p5, y = ..count../sum(..count..)), data = df_near_city) +
geom_freqpoly(binwidth = 5) +
scale_x_continuous(limits = c(5, 300), breaks = seq(0,300,25)) +
xlab('PM2.5') +
ylab('Percentage of that count')
#由于是幂律分布，考虑用log处理
ggplot(aes(x = PM2p5, y = ..count../sum(..count..)), data = df_near_city) +
geom_freqpoly(binwidth = 5) +
scale_x_log10() +
xlab('PM2.5') +
ylab('Percentage of that count')
#由于是幂律分布，考虑用log处理
ggplot(aes(x = PM2p5, y = ..count../sum(..count..)), data = df_near_city) +
geom_freqpoly(binwidth = 1) +
scale_x_log10() +
xlab('PM2.5') +
ylab('Percentage of that count')
#由于是幂律分布，考虑用log处理
ggplot(aes(x = PM2p5, y = ..count../sum(..count..)), data = df_near_city) +
geom_freqpoly(binwidth = 1) +
scale_x_log10(breaks = seq(0,300,25)) +
xlab('PM2.5') +
ylab('Percentage of that count')
#由于是幂律分布，考虑用log处理
ggplot(aes(x = PM2p5, y = ..count../sum(..count..)), data = df_far_city) +
geom_freqpoly(binwidth = 1) +
scale_x_log10(breaks = seq(0,300,25)) +
xlab('PM2.5') +
ylab('Percentage of that count')
setwd('D:/ZhuoZhou_Data_Git')
getwd()
setwd('D:/ZhuoZhou_Data_Git')
dir()
setwd('D:/ZhuoZhou_Data_Git')
library(ggplot2)
library(dplyr)
df_all_monitor <- read.csv('merge.csv')
ggplot(data = df_all_monitor, aes(x = PM2p5, y = ..density.., color = monitor)) +
geom_freqpoly(binwidth = 1) +
scale_x_log10() +
scale_y_log10() +
xlab('PM2.5 (lg)') +
ylab('Percentage of that count (lg)')
ggplot(data = df_all_monitor, aes(x = PM2p5, color = monitor)) +
geom_freqpoly(binwidth = 1) +
scale_x_log10() +
scale_y_log10() +
xlab('PM2.5 (lg)') +
ylab('Percentage of that count (lg)')
ggplot(data = df_all_monitor, aes(x = PM2p5, color = monitor)) +
geom_freqpoly(binwidth = 1) +
#scale_x_log10() +
#scale_y_log10() +
xlab('PM2.5 (lg)') +
ylab('Percentage of that count (lg)')
df_all_monitor <- read.csv('merge.csv')
ggplot(data = df_all_monitor, aes(x = PM2p5, color = monitor)) +
geom_freqpoly(binwidth = 1) +
#scale_x_log10() +
#scale_y_log10() +
xlab('PM2.5 (lg)') +
ylab('Percentage of that count (lg)')
ggplot(data = df_all_monitor, aes(x = PM2p5, color = monitor)) +
geom_freqpoly(binwidth = 1) +
scale_x_log10() +
scale_y_log10() +
xlab('PM2.5 (lg)') +
ylab('Percentage of that count (lg)')
ggplot(data = df_all_monitor, aes(x = PM2p5, color = monitor)) +
geom_freqpoly(binwidth = 1) +
scale_x_log10() +
#scale_y_log10() +
xlab('PM2.5 (lg)') +
ylab('Percentage of that count (lg)')
ggplot(data = df_all_monitor, aes(x = PM2p5, y = ..density.., color = monitor)) +
geom_freqpoly(binwidth = 1) +
scale_x_log10() +
#scale_y_log10() +
xlab('PM2.5 (lg)') +
ylab('Percentage of that count (lg)')
ggplot(data = df_all_monitor, aes(x = PM2p5, y = ..density.., color = monitor)) +
geom_freqpoly(binwidth = 1) +
scale_x_log10() +
scale_y_log10() +
xlab('PM2.5 (lg)') +
ylab('Percentage of that count (lg)')
ggplot(data = df_all_monitor, aes(x = PM2p5, y = ..density.., color = monitor)) +
geom_freqpoly(binwidth = 1) +
scale_x_log10() +
scale_y_log10() +
xlab('PM2.5 (lg)') +
ylab('Percentage of that count (lg)') +
coord_cartesian(xlim = c(0, 1000))
ggplot(data = df_all_monitor, aes(x = PM2p5, y = ..density.., color = monitor)) +
geom_freqpoly(binwidth = 1) +
scale_x_log10() +
scale_y_log10() +
xlab('PM2.5 (lg)') +
ylab('Percentage of that count (lg)') +
coord_cartesian(xlim = c(10, 1000))
ggplot(data = df_all_monitor, aes(x = PM2p5, y = ..density.., color = monitor)) +
geom_freqpoly(binwidth = 1) +
scale_x_log10() +
scale_y_log10() +
xlab('PM2.5 (lg)') +
ylab('Percentage of that count (lg)') +
coord_cartesian(xlim = c(10, 500))
ggplot(data = df_all_monitor, aes(x = PM2p5, y = ..density.., color = monitor)) +
geom_freqpoly(binwidth = 1) +
scale_x_log10() +
#scale_y_log10() +
xlab('PM2.5 (lg)') +
ylab('Percentage of that count (lg)') +
coord_cartesian(xlim = c(10, 500))
ggplot(data = df_all_monitor, aes(x = PM2p5, y = ..density.., color = monitor)) +
geom_freqpoly(binwidth = 1) +
scale_x_log10(seq(10, 500, 50)) +
#scale_y_log10() +
xlab('PM2.5 (lg)') +
ylab('Percentage of that count (lg)') +
coord_cartesian(xlim = c(10, 500))
ggplot(data = df_all_monitor, aes(x = PM2p5, y = ..density.., color = monitor)) +
geom_freqpoly(binwidth = 1) +
scale_x_log10(seq(10, 500, 100)) +
#scale_y_log10() +
xlab('PM2.5 (lg)') +
ylab('Percentage of that count (lg)') +
coord_cartesian(xlim = c(10, 500))
ggplot(data = df_all_monitor, aes(x = PM2p5, y = ..density.., color = monitor)) +
geom_freqpoly(binwidth = 1) +
scale_x_log10(breaks=seq(10, 500, 100)) +
#scale_y_log10() +
xlab('PM2.5 (lg)') +
ylab('Percentage of that count (lg)') +
coord_cartesian(xlim = c(10, 500))
ggplot(data = df_all_monitor, aes(x = PM2p5, y = ..density.., color = monitor)) +
geom_freqpoly(binwidth = 1) +
scale_x_log10(breaks=seq(10, 510, 100)) +
#scale_y_log10() +
xlab('PM2.5 (lg)') +
ylab('Percentage of that count (lg)') +
coord_cartesian(xlim = c(10, 500))
ggplot(data = df_all_monitor, aes(x = PM2p5, y = ..density.., color = monitor)) +
geom_freqpoly(binwidth = 1) +
scale_x_log10() +
#scale_y_log10() +
xlab('PM2.5 (lg)') +
ylab('Percentage of that count (lg)') +
coord_cartesian(xlim = c(10, 500))
ggplot(data = df_all_monitor, aes(x = PM2p5, y = ..density.., color = monitor)) +
geom_freqpoly(binwidth = 1) +
scale_x_log10(breaks=seq(10, 500, 30)) +
#scale_y_log10() +
xlab('PM2.5 (lg)') +
ylab('Percentage of that count (lg)') +
coord_cartesian(xlim = c(10, 500))
ggplot(data = df_all_monitor, aes(x = PM2p5, y = ..density.., color = monitor)) +
geom_freqpoly(binwidth = 1) +
scale_x_log10() +
#scale_y_log10() +
xlab('PM2.5 (lg)') +
ylab('Percentage of that count (lg)') +
coord_cartesian(xlim = c(10, 500))
ggplot(data = df_all_monitor, aes(x = PM2p5, y = ..density.., color = monitor)) +
geom_freqpoly(binwidth = 1) +
scale_x_log10() +
scale_y_log10() +
xlab('PM2.5 (lg)') +
ylab('Percentage of that count (lg)') +
coord_cartesian(xlim = c(10, 500))
ggplot(data = df_all_monitor, aes(x = PM2p5, y = ..density.., color = monitor)) +
geom_freqpoly(binwidth = 1) +
scale_x_log10() +
scale_y_log10() +
xlab('PM2.5 (lg)') +
ylab('Percentage of that count (lg)') +
coord_cartesian(xlim = c(10, 1000))
